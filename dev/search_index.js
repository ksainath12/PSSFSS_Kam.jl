var documenterSearchIndex = {"docs":
[{"location":"symmetric_strip/","page":"-","title":"-","text":"EditURL = \"<unknown>/symmetric_strip.jl\"","category":"page"},{"location":"symmetric_strip/#Symmetric-Strip-Example","page":"-","title":"Symmetric Strip Example","text":"","category":"section"},{"location":"symmetric_strip/","page":"-","title":"-","text":"This example consists of a symmetric strip grating, i.e. a grating where the strip width is half the unit cell width.  For normal incidence there is a closed-form solution due to Weinstein, but a more recent reference is Problem 10.6 of Collin, Field Theory of Guided Waves, Second Ed., IEEE Press, 1991.  Here is the code for computing the exact solution:","category":"page"},{"location":"symmetric_strip/","page":"-","title":"-","text":"\"\"\"\n    grating(kP, nterms=30) -> (Γ, T)\n\nCompute the normal incidence reflecton and transmission coefficients of a symmetric grid of\nzero-thickness conducting strips.  The product of the period of the strips and the incident\nelectric field wavenumber is `kP` (dimensionless).  The incident electric field is perpendicular\nto the direction along the axis of the strips.  The series have been accelerated\nby applying a Kummer's transformation, using the first two terms in the Maclaurin series for the\ninverse sin function.  `kP` must be in the half-open interval [0,1). The default number of summed\nterms `nterms` yields better than 10 digits of accuracy over the interval [0.01,0.99].\n\"\"\"\nfunction grating(kP; nterms=30)\n    sum1 = 1.3862943611198906 # \\sum_{n=1}^{\\infty} 1/(n-1/2) - 1/n = log(4)\n    sum3 = 7.2123414189575710 # \\sum_{n=1}^{\\infty} (n-1/2)^{-3} - n^{-3} = 6 * \\zeta(3)\n    x = kP/(4π)\n    θ = x*sum1 + x^3/6 * sum3\n    for n = 1:nterms\n        xonmhalf = x/(n - 0.5)\n        xon = x/n\n        term = asin(xonmhalf) - (xonmhalf + (xonmhalf)^3/6) -\n              (asin(xon) - (xon + xon^3/6))\n        θ += term\n    end\n    Γ = sin(θ) * cis(-π/2 - θ)\n    T = 1 + Γ\n    return (Γ, T)\nend","category":"page"},{"location":"symmetric_strip/","page":"-","title":"-","text":"","category":"page"},{"location":"symmetric_strip/","page":"-","title":"-","text":"This page was generated using Literate.jl.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"EditURL = \"<unknown>/examples.jl\"","category":"page"},{"location":"examples/#[PSSFSS](https://github.com/simonp0420/PSSFSS)-Examples","page":"Examples","title":"PSSFSS Examples","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"EditURL = \"<unknown>/symmetric_strip.jl\"","category":"page"},{"location":"examples/#Symmetric-Strip-Grating","page":"Examples","title":"Symmetric Strip Grating","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"This example consists of a symmetric strip grating, i.e. a grating where the strip width is half the unit cell period P:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: diagram)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Only three of the infinite number of strips in the grating are shown, and they extend infinitely to the left and right. The grating lies in the z=0 plane with free space on both sides. The shaded areas represent metalization. The dashed lines show two possible choices for the unit cell location: \"J\" for a formulation in terms of electric surface currents, and \"M\" for magnetic surface currents.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"For normal incidence there is a closed-form solution due to Weinstein, but for a more recent reference one can find the solution in Problem 10.6 of R. E. Collin, Field Theory of Guided Waves, Second Ed., IEEE Press, 1991.  Here is the code for computing the exact solution:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"\"\"\"\n    grating(kP, nterms=30) -> (Γ, T)\n\nCompute the normal incidence reflecton and transmission coefficients of a symmetric grid of\nzero-thickness conducting strips.  The product of the period of the strips and the incident\nelectric field wavenumber is `kP` (dimensionless).  The incident electric field is\nperpendicular to the direction along the axis of the strips.  The series have been\naccelerated by applying a Kummer's transformation, using the first two terms in the Maclaurin\nseries for the inverse sin function.  `kP` must be in the half-open interval [0,1). The\ndefault number of summed terms `nterms` yields better than 10 digits of accuracy over the\ninterval [0.01,0.99].\n\"\"\"\nfunction grating(kP; nterms=30)\n    sum1 = 1.3862943611198906 # \\sum_{n=1}^{\\infty} 1/(n-1/2) - 1/n = log(4)\n    sum3 = 7.2123414189575710 # \\sum_{n=1}^{\\infty} (n-1/2)^{-3} - n^{-3} = 6 * \\zeta(3)\n    x = kP/(4π)\n    θ = x*sum1 + x^3/6 * sum3\n    for n = 1:nterms\n        xonmhalf = x/(n - 0.5)\n        xon = x/n\n        term = asin(xonmhalf) - (xonmhalf + (xonmhalf)^3/6) -\n              (asin(xon) - (xon + xon^3/6))\n        θ += term\n    end\n    Γ = sin(θ) * cis(-π/2 - θ)\n    T = 1 + Γ\n    return (Γ, T)\nend","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Note that using the extension of Babinet's Principle for electromagnetic fields this also provides the solution (upon appropriate interchange and sign change of the coefficients) for the case where the incident wave polarization is parallel to the direction of the strips.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Here is the PSSFSS code to analyze this structure using electric currents as the unknowns.  We will scale the geometry so that the frequency in GHz is numerically equal to the period of the strips measured in wavelengths.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"ENV[\"GKSwstype\"] = \"100\" # hide\nusing Plots, PSSFSS\nc = 11.802852677165355 # light speed [inch*GHz]\nperiod = c  # so the period/wavelength = freq in GHz\nPy = period\nLy = period/2\nPx = Lx = Ly/10 # Infinite in x direction so this can be anything\nNy = 60\nNx = round(Int, Ny*Lx/Ly)\nsheet = rectstrip(;Px, Py, Lx, Ly, Nx, Ny, units=inch)\nflist = 0.02:0.02:0.98\nsteering = (θ=0, ϕ=0)\nstrata = [Layer()\n          sheet\n          Layer()]\nresults_j = analyze(strata, flist, steering, showprogress=false,\n                    resultfile=devnull, logfile=devnull);\np1 = plot(sheet)\np2 = plot(sheet, unitcell=true)\nptitle = plot(title = \"Symmetric Strip Triangulation\",\n             grid = false, showaxis = false, xtick=[], ytick=[],\n             bottom_margin = -50Plots.px)\nplot(ptitle, p1, p2, layout = @layout([A{0.09h}; [B C]]))","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Note that setting Lx = Px causes the strip to fully occupy the x-extent of the unit cell.  PSSFSS automatically ensures that the triangle edges at these unit cell boundaries define basis functions that satisfy the Floquet (phase shift) boundary conditions, so that currents are free to flow across these unit cell boundaries.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"We can also analyze the same structure using magnetic currents in the areas free of metallization as the unknowns:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"sheet = rectstrip(;class='M', Px, Py, Lx, Ly, Nx, Ny, units=inch)\nstrata = [Layer()\n          sheet\n          Layer()]\nresults_m = analyze(strata, flist, steering, showprogress=false,\n                    resultfile=devnull, logfile=devnull);\nnothing #hide","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Each 50-frequency run of analyze takes about 14 seconds for this geometry of 720 triangles on my machine. More detailed timing information is available in the log file (which is omitted for generating this documentation).","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"We will compare the PSSFSS results to the analytic solution:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"# Generate exact results:\nrt = grating.(2π*flist)\nrperp_exact = first.(rt)\ntperp_exact = last.(rt)\nrpar_exact = -tperp_exact\ntpar_exact = -rperp_exact;\nnothing #hide","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Obtain PSSFSS results for electric and magnetic currents:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"outrequest = @outputs s11(v,v) s21(v,v) s11(h,h) s21(h,h)\nrperp_j, tperp_j, rpar_j, tpar_j =\n      collect.(eachcol(extract_result(results_j, outrequest)))\nrperp_m, tperp_m, rpar_m, tpar_m =\n      collect.(eachcol(extract_result(results_m, outrequest)));\nnothing #hide","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Generate the comparison plots:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"angdeg(z) = rad2deg(angle(z)) # Convenience function\n\np1 = plot(title = \"Perpendicular Reflection Magnitude\",\n          xlabel = \"Period (wavelengths)\",\n          ylabel = \"Coefficient Magnitude\",\n          legend=:topleft)\nplot!(p1, flist, abs.(rperp_exact), ls=:dash, label=\"Exact\")\nplot!(p1, flist, abs.(rperp_j), label=\"PSSFSS J\")\nplot!(p1, flist, abs.(rperp_m), label=\"PSSFSS M\")","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"p2 = plot(title = \"Perpendicular Reflection Phase\",\n          xlabel = \"Period (wavelengths)\",\n          ylabel = \"Phase (deg)\")\nplot!(p2, flist, angdeg.(rperp_exact), ls=:dash, label=\"Exact\")\nplot!(p2, flist, angdeg.(rperp_j), label=\"PSSFSS J\")\nplot!(p2, flist, angdeg.(rperp_m), label=\"PSSFSS M\")","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"p1 = plot(title = \"Parallel Reflection Magnitude\",\n          xlabel = \"Period (wavelengths)\",\n          ylabel = \"Coefficient Magnitude\")\nplot!(p1, flist, abs.(rpar_exact), ls=:dash, label=\"Exact\")\nplot!(p1, flist, abs.(rpar_j), label=\"PSSFSS J\")\nplot!(p1, flist, abs.(rpar_m), label=\"PSSFSS M\")","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"p2 = plot(title = \"Parallel Reflection Phase\",\n          xlabel = \"Period (wavelengths)\",\n          ylabel = \"Phase (deg)\")\nplot!(p2, flist, angdeg.(rpar_exact), ls=:dash, label=\"Exact\")\nplot!(p2, flist, angdeg.(rpar_j), label=\"PSSFSS J\")\nplot!(p2, flist, angdeg.(rpar_m), label=\"PSSFSS M\")","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Now look at the transmission coefficients:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"p1 = plot(title = \"Perpendicular Transmission Magnitude\",\n          xlabel = \"Period (wavelengths)\",\n          ylabel = \"Coefficient Magnitude\")\nplot!(p1, flist, abs.(tperp_exact), ls=:dash, label=\"Exact\")\nplot!(p1, flist, abs.(tperp_j), label=\"PSSFSS J\")\nplot!(p1, flist, abs.(tperp_m), label=\"PSSFSS M\")","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"p2 = plot(title = \"Perpendicular Transmission Phase\",\n          xlabel = \"Period (wavelengths)\",\n          ylabel = \"Phase (deg)\")\nplot!(p2, flist, angdeg.(tperp_exact), ls=:dash, label=\"Exact\")\nplot!(p2, flist, angdeg.(tperp_j), label=\"PSSFSS J\")\nplot!(p2, flist, angdeg.(tperp_m), label=\"PSSFSS M\")","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"p1 = plot(title = \"Parallel Transmission Magnitude\",\n          xlabel = \"Period (wavelengths)\",\n          ylabel = \"Coefficient Magnitude\", legend=:topleft)\nplot!(p1, flist, abs.(tpar_exact), ls=:dash, label=\"Exact\")\nplot!(p1, flist, abs.(tpar_j), label=\"PSSFSS J\")\nplot!(p1, flist, abs.(tpar_m), label=\"PSSFSS M\")","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"p2 = plot(title = \"Parallel Transmission Phase\",\n          xlabel = \"Period (wavelengths)\",\n          ylabel = \"Phase (deg)\")\nplot!(p2, flist, angdeg.(tpar_exact), ls=:dash, label=\"Exact\")\nplot!(p2, flist, angdeg.(tpar_j), label=\"PSSFSS J\")\nplot!(p2, flist, angdeg.(tpar_m), label=\"PSSFSS M\")","category":"page"},{"location":"examples/#Conclusion","page":"Examples","title":"Conclusion","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"Although good agreement is obtained, as expected the best agreement between all three results occurs for the lowest frequencies, where the triangles are smallest in terms of wavelength.  This emphasizes the fact that it is necessary for the user to check that enough triangles have been requested for good convergence over the frequency band of interest.  This example is an extremely demanding case in terms of bandwidth, as the ratio of maximum to minimum frequency here is 098002 = 491","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"EditURL = \"<unknown>/resistive_square_patch.jl\"","category":"page"},{"location":"examples/#Resistive-Square-Patch","page":"Examples","title":"Resistive Square Patch","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"This example will demonstrate the ability of PSSFSS to accurately model finite conductivity of FSS metallization.  It consists of a square finitely conducting patch in a square lattice.  It is taken from a paper by Alon S. Barlevy and Yahya Rahmat-Samii, \"Fundamental Constraints on the Electrical Characteristics of Frequency Selective Surfaces\", Electromagnetics, vol. 17, 1997, pp. 41-68. This particular example is from Section 3.2, Figures 7 and 8.  We will compare PSSFSS results to those digitized from the cited figures.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"We start by defining a function that creates a patch of the desired sheet resistance:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"ENV[\"GKSwstype\"] = \"100\" # hide\nusing Plots, PSSFSS\npatch(R) = rectstrip(Nx=10, Ny=10, Px=1, Py=1, Lx=0.5, Ly=0.5, units=cm, Rsheet=R)\nplot(patch(0), unitcell=true)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"The patches measure 0.5 cm on a side and lie in a square lattice of period 1 cm. Now we perform the analysis, looping over the desired values of sheet resistance.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"steering = (ϕ=0, θ=0)\nflist = 1:0.5:60\nRs = [0, 10, 30, 100]\ncalculated = zeros(length(flist), length(Rs)) # preallocate storage\noutputs = @outputs s11mag(v,v)\nfor (i,R) in pairs(Rs)\n    strata = [Layer(), patch(R), Layer()]\n    results = analyze(strata, flist, steering, showprogress=false,\n                      logfile=devnull, resultfile=devnull)\n    calculated[:,i] = extract_result(results, outputs)\nend","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Looping over the four sheet resistance values, each evaluated at 119 frequencies required approximately 20 seconds on my machine.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"We plot the results, including those digitized from the paper for comparison:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"using DelimitedFiles\nmarkers = (:diamond, :utriangle, :square, :xcross)\ncolors = (:blue, :red, :green, :black)\np = plot(xlim=(-0.01,60.01), xtick = 0:10:60, ylim=(-0.01,1.01), ytick=0:0.1:1,\n         xlabel=\"Frequency (GHz)\", ylabel=\"Reflection Coefficient Magnitude\",\n         title = \"Resistive Square Patch\",\n         legend=:topright)\nfor (i,R) in pairs(Rs)\n    scatter!(p, flist, calculated[:,i], label=\"PSSFSS $R Ω\", ms=2, shape=markers[i], color=colors[i])\n    data = readdlm(\"../src/assets/barlevy_patch_digitized_$(R)ohm.csv\", ',')\n    plot!(p, data[:,1], data[:,2], label=\"Barlevy $R Ω\", ls=:dash, color=colors[i])\nend\np","category":"page"},{"location":"examples/#Conclusion-2","page":"Examples","title":"Conclusion","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"PSSFSS results are indistinguishable from those reported in the cited paper.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"EditURL = \"<unknown>/cross_on_dielectric_substrate.jl\"","category":"page"},{"location":"examples/#Cross-on-Dielectric-Substrate","page":"Examples","title":"Cross on Dielectric Substrate","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"This example is also taken from the paper by Alon S. Barlevy and Yahya Rahmat-Samii, \"Fundamental Constraints on the Electrical Characteristics of Frequency Selective Surfaces\", Electromagnetics, vol. 17, 1997, pp. 41-68. This particular example is from Section 3.2, Figures 7 and 8.  It also appeared at higher resolution in Barlevy's PhD dissertation from which the comparison curves were digitized.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"We use the loadedcross element where we choose w > L2/2, so that the Cross is \"unloaded\", i.e. the center section is filled in with metallization:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"ENV[\"GKSwstype\"] = \"100\" # hide\nusing Plots, PSSFSS, DelimitedFiles\nsheet = loadedcross(w=1.0, L1=0.6875, L2=0.0625, s1=[1.0,0.0],\n                    s2=[0.0,1.0], ntri=600, units=cm)\nplot(sheet, unitcell=true)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"A few things to note. First, the mesh is unstructured.  So there are no redundant triangle face-pairs that PSSFSS can exploit to reduce execution time.  Second, the number of triangle faces generated is only approximately equal to the requested value of 600.  This can be verified by entering the Julia variable sheet at the REPL (i.e. the Julia prompt):","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"sheet","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"The cross FSS is etched on a dielectric sheet of thickness 3 mm.  The dielectric constant is varied over the values 1, 2, and 4 to observe the effect on the resonant frequency.  Following the reference, the list of analysis frequencies is varied slightly depending on the value of dielectric constant:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"resultsstack = Any[]\nsteering = (ϕ=0, θ=0)\nfor eps in [1, 2, 4]\n    strata = [  Layer()\n                sheet\n                Layer(ϵᵣ=eps, width=3mm)\n                Layer()\n             ]\n    if eps == 1\n        flist = 1:0.2:30\n    elseif eps == 2\n        flist = 1:0.2:26\n    else\n        flist = 1:0.2:20\n    end\n    results = analyze(strata, flist, steering, showprogress=false,\n                      resultfile=devnull, logfile=devnull)\n    push!(resultsstack, results)\nend","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"The above loop requires about 80 seconds of execution time on my machine. Compare PSSFSS results to those digitized from the dissertation figure:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"col=[:red,:blue,:green]\np = plot(xlim=(0.,30), xtick = 0:5:30, ylim=(0,1), ytick=0:0.1:1,\n         xlabel=\"Frequency (GHz)\", ylabel=\"Reflection Coefficient Magnitude\",\n         legend=:topleft, lw=2)\nfor (i,eps) in enumerate([1,2,4])\n    data = extract_result(resultsstack[i],  @outputs FGHz s11mag(v,v))\n    plot!(p, data[:,1], data[:,2], label=\"PSSFSS ϵᵣ = $eps\", lc=col[i])\n    data = readdlm(\"../src/assets/barlevy_diss_eps$(eps).csv\", ',')\n    plot!(p, data[:,1], data[:,2], label=\"Barlevy ϵᵣ = $eps\", lc=col[i], ls=:dot)\nend\np","category":"page"},{"location":"examples/#Conclusion-3","page":"Examples","title":"Conclusion","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"PSSFSS results agree very well with those of the cited reference, especially when accounting for the fact that the reference results are obtained by digitizing a scanned figure.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"EditURL = \"<unknown>/square_loop_absorber.jl\"","category":"page"},{"location":"examples/#Square-Loop-Absorber","page":"Examples","title":"Square Loop Absorber","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"This example is from Figure 7 of Costa and Monorchio: \"A frequency selective radome with wideband absorbing properties\", IEEE Trans. AP-S, Vol. 60, no. 6, June 2012, pp. 2740–2747.  It shows how one can use the polyring function to model square loop elements.  Three different designs are examined that employ different loop thicknesses and different values of sheet resistance. We compare the reflection coefficient magnitudes computed by PSSFSS with those digitized from the cited figure when the sheet is suspended 5 mm above a ground plane, hence we will also make use of the pecsheet function.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"ENV[\"GKSwstype\"] = \"100\" # hide\nusing Plots, PSSFSS, DelimitedFiles\nD = 11 # Period of square lattice (mm)\nr_outer = √2/2 * D/8 * [5,6,7] # radii of square outer vertices\nthickness = D/16 * [1,2,3]\nr_inner = r_outer - √2 * thickness  # radii of square inner vertices\nRs = [15,40,70] # Sheet resistance (Ω/□)\nlabels = [\"Thin\", \"Medium\", \"Thick\"]\ncolors = [:green, :blue, :red]\np = plot(title=\"Costa Absorber\", xlim=(0,25),ylim=(-35,0),xtick=0:5:25,ytick=-35:5:0,\n         xlabel=\"Frequency (GHz)\", ylabel=\"Reflection Magnitude (dB)\", legend=:bottomleft)\nps = []\nfor (i,(ri, ro, label, color, R)) in enumerate(zip(r_inner, r_outer, labels, colors, Rs))\n    sheet = polyring(sides=4, s1=[D, 0], s2=[0, D], ntri=700, orient=45,\n                     a=[ri], b=[ro], Rsheet=R, units=mm)\n    push!(ps, plot(sheet, unitcell=true, title=label, lc=color))\n    strata = [Layer()\n              sheet\n              Layer(width=5mm)\n              pecsheet() # Perfectly conducting ground plane\n              Layer()]\n    results = analyze(strata, 1:0.2:25, (ϕ=0, θ=0), showprogress=false,\n                      resultfile=devnull, logfile=devnull)\n    data = extract_result(results, @outputs FGHz s11dB(h,h))\n    plot!(p, data[:,1], data[:,2], label=\"PSSFSS \"*label, lc=color)\n    dat = readdlm(\"../src/assets/costa_2014_\" * lowercase(label) * \"_reflection.csv\", ',')\n    plot!(p, dat[:,1], dat[:,2], label=\"Costa \"*label, ls=:dash, lc=color)\nend\nplot(ps..., layout=(1,3))","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"This run takes about 85 seconds on my machine.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"p","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"It is useful to take a look at the log file created by PSSFSS for the last run above:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Starting PSSFSS analysis on 2021-05-05 at 15:22:09.955\n\n\nDielectric layer information...\n\nLayer  Width  units  epsr   tandel   mur  mtandel modes  beta1x  beta1y  beta2x  beta2y\n----- ------------- ------- ------ ------- ------ ----- ------- ------- ------- -------\n    1    0.0000  mm    1.00 0.0000    1.00 0.0000     2   571.2     0.0     0.0   571.2\n==================  Sheet   1  ========================   571.2     0.0     0.0   571.2\n    2    5.0000  mm    1.00 0.0000    1.00 0.0000    42   571.2     0.0     0.0   571.2\n==================  Sheet   2  ========================     0.0     0.0     0.0     0.0\n    3    0.0000  mm    1.00 0.0000    1.00 0.0000     2   571.2     0.0     0.0   571.2\n\n\n\nPSS/FSS sheet information...\n\nSheet  Loc         Style      Rot  J/M Faces Edges Nodes Unknowns  NUFP\n-----  ---  ---------------- ----- --- ----- ----- ----- -------- ------\n  1     1          polyring   0.0  J    753  1201   448    1058  567009\n  2     2              NULL   0.0  E      0     0     0       0       0\n\n...","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Note from the dielectric layer report that there are 42 modes defined in the region between the ground plane and the FSS sheet.  This is the number of modes selected by the code to include in the generalized scattering matrix formulation to properly account for electromagnetic coupling between the two surfaces. If the 5 mm spacing were increased to, say, 7 mm then fewer modes would be needed.  Also note in the FSS sheet information that NUFP (the number of unique face pairs) is exactly equal to the number of faces squared (567009 = 753^2), a consequence of the unstructured triangulation used for a polyring.","category":"page"},{"location":"examples/#Conclusion-4","page":"Examples","title":"Conclusion","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"PSSFSS results agree very well with those of the paper, except for the medium width loop, where the agreement is not quite as good.  The reason for this is not known.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"EditURL = \"<unknown>/band_pass_filter.jl\"","category":"page"},{"location":"examples/#Loaded-Cross-Band-Pass-Filter","page":"Examples","title":"Loaded Cross Band Pass Filter","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"This example is originally from Fig. 7.9 of B. Munk, Frequency Selective Surfaces, Theory and Design, John Wiley and Sons, 2000.  The same case was analyzed in L. Li, D. H. Werner et al, \"A Model-Based Parameter Estimation Technique for Wide-Band Interpolation of Periodic Moment Method Impedance Matrices With Application to Genetic Algorithm Optimization of Frequency Selective Surfaces\", IEEE Trans. AP-S, vol. 54, no. 3, March 2006, pp. 908-924, Fig. 6.  Unfortunately, in neither reference are the dimensions of the loaded cross stated, except for the square unit cell period of 8.61 mm.  I estimated the dimensions from the sketch in Fig. 6 of the second reference.  To provide a reliable comparison, I enlisted my colleague Mike Maybell, principal of Planet Earth Communications, who generously offered to analyze the filter using CST Microwave Studio, a rigorous commercial finite volume electromagnetic solver.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Two identical loaded cross slot-type elements are separated by a 6 mm layer of dielectric constant 1.9.  Outboard of each sheet is a 1.1 cm layer of dielectric constant 1.3. The closely spaced sheets are a good test of the generalized scattering formulation implemented in PSSFSS.  The sheet geometry is shown below.  Remember that the entire sheet is metallized except for the region of the triangulation.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"ENV[\"GKSwstype\"] = \"100\" # hide\nusing Plots, PSSFSS\nsheet = loadedcross(class='M', w=0.023, L1=0.8, L2=0.14,\n            s1=[0.861,0.0], s2=[0.0,0.861], ntri=600, units=cm)\nplot(sheet, unitcell=true)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"steering = (ϕ=0, θ=0)\nstrata = [  Layer()\n            Layer(ϵᵣ=1.3, width=1.1cm)\n            sheet\n            Layer(ϵᵣ=1.9, width=0.6cm)\n            sheet\n            Layer(ϵᵣ=1.3, width=1.1cm)\n            Layer()  ]\nflist = 1:0.1:20\nresults = analyze(strata, flist, steering, resultfile=devnull,\n                  logfile=devnull, showprogress=false)\ndata = extract_result(results, @outputs FGHz s21db(v,v) s11db(v,v))\nusing DelimitedFiles\ndat = readdlm(\"../src/assets/MaybellLoadedCrossResults.csv\", ',', skipstart=1)\np = plot(xlabel=\"Frequency (GHz)\", ylabel=\"Reflection Coefficient (dB)\",\n         legend=:left, title=\"Loaded Cross Band-Pass Filter\", xtick=0:2:20, ytick=-30:5:0,\n         xlim=(-0.1,20.1), ylim=(-35,0.1))\nplot!(p, data[:,1], data[:,3], label=\"PSSFSS\", color=:red)\nplot!(p, dat[:,1], dat[:,2], label=\"CST\", color=:blue)\np","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"p2 = plot(xlabel=\"Frequency (GHz)\", ylabel=\"Transmission Coefficient (dB)\",\n          legend=:bottom, title=\"Loaded Cross Band-Pass Filter\", xtick=0:2:20, ytick=-80:10:0,\n         xlim=(-0.1,20.1), ylim=(-80,0.1))\nplot!(p2, data[:,1], data[:,2], label=\"PSSFSS\", color=:red)\nplot!(p2, dat[:,1], dat[:,4], label=\"CST\", color=:blue)\np2","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"This analysis takes about 90 seconds for 191 frequencies on my machine.  Note that rather than including two separate invocations of the loadedcross function when defining the strata, I referenced the same sheet object in the two different locations. This allows PSSFSS to recognize that the triangulations are identical, and to exploit this fact in making the analysis more efficient.  In fact, if both sheets had been embedded in similar dielectric claddings (in the same order), then the GSM (generalized scattering matrix) computed for the sheet in its first location could be reused without additional computation for its second location.  In this case, though, only the spatial integrals are re-used.  For a oblique incidence case, computing the spatial integrals is often the most expensive part of the analysis, so the savings from reusing the same sheet definition can be substantial.","category":"page"},{"location":"examples/#Conclusion-5","page":"Examples","title":"Conclusion","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"Very good agreement is obtained versus CST over a large dynamic range.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"EditURL = \"<unknown>/cpss_optimization.jl\"","category":"page"},{"location":"examples/#Meanderline-Based-CPSS","page":"Examples","title":"Meanderline-Based CPSS","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"A \"CPSS\" is a circular polarization selective structure, i.e., a structure that reacts differently to the two senses of circular polarization. We'll first look at analyzing a design presented in the literature, and then proceed to optimize another design using PSSFSS as the analysis engine inside the optimization objective function.","category":"page"},{"location":"examples/#Sjöberg-and-Ericsson-Design","page":"Examples","title":"Sjöberg and Ericsson Design","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"This example comes from the paper D. Sjöberg and A. Ericsson, \"A multi layer meander line circular polarization selective structure (MLML-CPSS),\" The 8th European Conference on Antennas and Propagation (EuCAP 2014), 2014, pp. 464-468, doi: 10.1109/EuCAP.2014.6901792.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"The authors describe an ingenious structure consisting of 5 progressively rotated meanderline sheets, which acts as a circular polarization selective surface: it passes LHCP (almost) without attenuation or reflection, and reflects RHCP (without changing its sense!) almost without attenuation or transmission.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Here is the script that analyzes their design:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"using PSSFSS\n# Define convenience functions for sheets:\nouter(rot) = meander(a=3.97, b=3.97, w1=0.13, w2=0.13, h=2.53+0.13, units=mm, ntri=600, rot=rot)\ninner(rot) = meander(a=3.97*√2, b=3.97/√2, w1=0.1, w2=0.1, h=0.14+0.1, units=mm, ntri=600, rot=rot)\ncenter(rot) = meander(a=3.97, b=3.97, w1=0.34, w2=0.34, h=2.51+0.34, units=mm, ntri=600, rot=rot)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Note our definition of h differs from that of the reference by the width of the strip.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"t1 = 4mm # Outer layers thickness\nt2 = 2.45mm # Inner layers thickness\nsubstrate = Layer(width=0.1mm, epsr=2.6)\nfoam(w) = Layer(width=w, epsr=1.05) # Foam layer convenience function\n\nrot0 = 0 # rotation of first sheet\nstrata = [\n    Layer()\n    outer(rot0)\n    substrate\n    foam(t1)\n    inner(rot0 - 45)\n    substrate\n    foam(t2)\n    center(rot0 - 2*45)\n    substrate\n    foam(t2)\n    inner(rot0 - 3*45)\n    substrate\n    foam(t1)\n    outer(rot0 - 4*45)\n    substrate\n    Layer() ]\nsteering = (θ=0, ϕ=0)\nflist = 10:0.1:20\n\nresults = analyze(strata, flist, steering, showprogress=false,\n                  resultfile=devnull, logfile=devnull);\nnothing #hide","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Here is the script that compares PSSFSS predicted performance with very high accuracy predictions from CST and COMSOL that were digitized from figures in the paper.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"ENV[\"GKSwstype\"] = \"100\" # hide\nusing Plots, DelimitedFiles\nRL11rr = -extract_result(results, @outputs s11db(r,r))\nAR11r = extract_result(results, @outputs ar11db(r))\nIL21L = -extract_result(results, @outputs s21db(L,L))\nAR21L = extract_result(results, @outputs ar21db(L))\n\ndefault(lw=2, xlim=(10,20), xtick=10:20, ylim=(0,3), ytick=0:0.5:3, gridalpha=0.3)\np = plot(flist,RL11rr,title=\"RHCP → RHCP Return Loss\", label=\"PSSFSS\")\ncst = readdlm(\"../src/assets/cpss_cst_fine_digitized_rl.csv\", ',')\nplot!(p, cst[:,1], cst[:,2], label=\"CST\")\ncomsol = readdlm(\"../src/assets/cpss_comsol_fine_digitized_rl.csv\", ',')\nplot!(p, comsol[:,1], comsol[:,2], label=\"COMSOL\")","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"p = plot(flist,AR11r,title=\"RHCP → RHCP Reflected Axial Ratio\", label=\"PSSFSS\")\ncst = readdlm(\"../src/assets/cpss_cst_fine_digitized_ar_reflected.csv\", ',')\nplot!(p, cst[:,1], cst[:,2], label=\"CST\")\ncomsol = readdlm(\"../src/assets/cpss_comsol_fine_digitized_ar_reflected.csv\", ',')\nplot!(p, comsol[:,1], comsol[:,2], label=\"COMSOL\")","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"p = plot(flist,IL21L,title=\"LHCP → LHCP Insertion Loss\", label=\"PSSFSS\")\ncst = readdlm(\"../src/assets/cpss_cst_fine_digitized_il.csv\", ',')\nplot!(p, cst[:,1], cst[:,2], label=\"CST\")\ncomsol = readdlm(\"../src/assets/cpss_comsol_fine_digitized_il.csv\", ',')\nplot!(p, comsol[:,1], comsol[:,2], label=\"COMSOL\")","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"p = plot(flist,AR21L,title=\"LHCP → LHCP Transmitted Axial Ratio\", label=\"PSSFSS\")\ncst = readdlm(\"../src/assets/cpss_cst_fine_digitized_ar_transmitted.csv\", ',')\nplot!(p, cst[:,1], cst[:,2], label=\"CST\")\ncomsol = readdlm(\"../src/assets/cpss_comsol_fine_digitized_ar_transmitted.csv\", ',')\nplot!(p, comsol[:,1], comsol[:,2], label=\"COMSOL\")","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"The PSSFSS results generally track well with the high-accuracy solutions, but are less accurate especially at the high end of the band, presumably because cascading is performed in PSSFSS for this structure using only the two principal Floquet modes.  This is necessary because the rotated meanderlines are achieved by rotating the entire unit cell, and the unit cell for sheets 2 and 4 are not square.  Since the periodicity of the sheets in the structure varies from sheet to sheet, higher order Floquet modes common to neighboring sheets cannot be defined, so we are forced to use only the dominant (0,0) modes which are independent of the periodicity.  This is a limitation which could be removed in the future using the same technique employed in the paper to enable full-wave analysis with the commercial tools.  Meanwhile, it is of interest to note that their high-accuracy runs required 10 hours for CST and 19 hours for COMSOL on large engineering workstations.  The PSSFSS run took about 60 seconds on my desktop machine.","category":"page"},{"location":"examples/#Design-Based-on-PSSFSS-Optimization-with-CMAES","page":"Examples","title":"Design Based on PSSFSS Optimization with CMAES","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"Here we use PSSFSS in conjunction with the CMAES optimizer from the CMAEvolutionStrategy package.  I've used CMAES in the past with good success on some tough optimization problems.  Here is the code that defines the objective function:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"using PSSFSS\nusing Dates: now\n\nlet bestf = typemax(Float64)\n    function objective(x)\n        period, wo, ho, wi, hi, wc, hc, t1, t2 = x\n        ao = bo = ai = bi = ac = bc = period\n        ai *= √2\n        bi /= √2\n        # Ensure physically realizable or return large value:\n        (bo > ho > 2.1*wo && bi > hi > 2.1*wi && bc > hc > 2.1*wc) || (return 5000.0)\n\n        outer(rot) = meander(a=ao, b=bo, w1=wo, w2=wo, h=ho, units=mm, ntri=400, rot=rot)\n        inner(rot) = meander(a=ai, b=bi, w1=wi, w2=wi, h=hi, units=mm, ntri=400, rot=rot)\n        center(rot) = meander(a=ac, b=bc, w1=wc, w2=wc, h=hc, units=mm, ntri=400, rot=rot)\n\n        substrate = Layer(width=0.1mm, epsr=2.6)\n        foam(w) = Layer(width=w, epsr=1.05)\n        rot0 = 0\n\n        strata = [\n                Layer()\n                outer(rot0)\n                substrate\n                foam(t1*1mm)\n                inner(rot0 - 45)\n                substrate\n                foam(t2*1mm)\n                center(rot0 - 2*45)\n                substrate\n                foam(t2*1mm)\n                inner(rot0 - 3*45)\n                substrate\n                foam(t1*1mm)\n                outer(rot0 - 4*45)\n                substrate\n                Layer() ]\n        steering = (θ=0, ϕ=0)\n        flist = 11:0.25:19\n        results = analyze(strata, flist, steering, showprogress=false)\n        s11rr, s21ll, ar11db, ar21db = eachcol(extract_result(results,\n                       @outputs s11db(R,R) s21db(L,L) ar11db(R) ar21db(L)))\n        RL = -s11rr\n        IL = -s21ll\n        obj = maximum(vcat(RL,IL,ar11db,ar21db))\n        if obj < bestf\n            bestf = obj\n            open(\"optimization_best.log\", \"a\") do fid\n                xround = round.(x, digits=4)\n                println(fid, round(obj,digits=4), \" at x = \", xround, \"  #\", now())\n            end\n        end\n        return obj\n    end\nend","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"We optimize at 33 frequencies between 11 and 19 GHz.  The actual frequency range of interest is 12 to 18 GHz; the wider optimization band provides some safety margin.  Each objective function evaluation takes about 24  seconds on my machine. As you can see from the code above, each successive sheet in the structure is rotated an additional 45 degrees relative to its predecessor. The objective is defined as the largest value of RHCP reflected return loss, LHCP insertion loss, or reflected or transmitted axial ratio that occurs at any of the analysis frequencies (i.e. we are setting up for \"minimax\" optimization). Also, the let block allows the objective function to maintain persistent state in the variable bestf which is initialized to the largest 64-bit floating point value. Each time a set of inputs results in a lower objective function value, bestf is updated with this value and the inputs and objective function value are written to the file \"optimization_best.log\", along with a date/time stamp.  This allows the user to monitor the optimization and to terminate the it prematurely, if desired, without losing the best result achieved so far.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Here is the code for running the optimization:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"using CMAEvolutionStrategy\n#  x = [period,  wo,  ho,  wi,   hi,  wc,   hc,  t1,  t2]\nxmin = [3.0,     0.1, 0.1, 0.1,  0.1, 0.1,  0.1, 1.5, 1.5]\nxmax = [5.5,     0.35,4.0, 0.35, 4.0, 0.35, 4.0, 6.0, 6.0]\nx0 = 0.5 * (xmin + xmax)\npopsize = 2*(4 + floor(Int, 3*log(length(x0))))\nisfile(\"optimization_best.log\") && rm(\"optimization_best.log\")\nopt = minimize(objective, x0, 1.0;\n           lower = xmin,\n           upper = xmax,\n           maxfevals = 9000,\n           xtol = 1e-4,\n           ftol = 1e-5,\n           popsize=popsize)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Note that I set the population size to twice the normal default value.  Based on previous experience, using 2 to 3 times the default population size helps the optimizer better on tough objective functions like the present one. I let the optimizer run for 6 hours, during which time it reduced the objective function value from 11.88 dB to 0.86 dB.  It was then interrupted due to a file system error.  I restarted it after setting the starting value to the current best and reducing the \"sigma\" value (the third argument to minimize, which controls the algorithms  exploratory tendency) to 0.2 (slightly greater than the value it had achieved during the aborted run) from its default value of 1.  After about 13 hours the program terminated normally due to insufficient changes in the x variable.  The final value of objective function was 0.65 dB.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Here is a look at the final portion of the file \"optimization_best.log\":","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"0.6535 at x = [3.0968, 0.1025, 2.1601, 0.1003, 0.95, 0.3377, 2.3584, 4.3813, 2.2974]  #2021-05-09T23:02:40.230\n0.6533 at x = [3.0991, 0.1028, 2.162, 0.1002, 0.944, 0.3372, 2.3562, 4.3801, 2.3007]  #2021-05-09T23:27:38.132\n0.6532 at x = [3.0985, 0.1029, 2.1652, 0.1003, 0.9414, 0.337, 2.3547, 4.3766, 2.3036]  #2021-05-09T23:46:19.068\n0.6531 at x = [3.0998, 0.1028, 2.164, 0.1001, 0.9443, 0.3378, 2.3558, 4.3783, 2.3028]  #2021-05-09T23:49:13.202\n0.6529 at x = [3.0988, 0.1028, 2.1652, 0.1002, 0.9422, 0.3372, 2.3545, 4.3765, 2.3039]  #2021-05-09T23:50:58.064\n0.6529 at x = [3.0985, 0.1029, 2.1687, 0.1002, 0.9407, 0.3368, 2.3526, 4.3714, 2.3073]  #2021-05-10T00:11:36.314\n0.6529 at x = [3.0976, 0.1028, 2.1688, 0.1004, 0.9443, 0.3374, 2.3532, 4.3716, 2.3062]  #2021-05-10T00:16:16.205\n0.6528 at x = [3.0991, 0.1028, 2.1679, 0.1002, 0.9444, 0.3376, 2.3539, 4.3735, 2.3056]  #2021-05-10T00:20:04.181\n0.6527 at x = [3.0987, 0.1027, 2.1664, 0.1001, 0.9443, 0.3375, 2.3544, 4.3751, 2.3045]  #2021-05-10T00:33:08.779\n0.6527 at x = [3.0972, 0.1029, 2.1692, 0.1002, 0.9362, 0.336, 2.3512, 4.3707, 2.3083]  #2021-05-10T00:39:14.306\n0.6527 at x = [3.0985, 0.1028, 2.1663, 0.1001, 0.9426, 0.3372, 2.3539, 4.3749, 2.3049]  #2021-05-10T00:40:59.223\n0.6527 at x = [3.0974, 0.1028, 2.1688, 0.1002, 0.9424, 0.3371, 2.3527, 4.3718, 2.3069]  #2021-05-10T00:51:08.383\n0.6526 at x = [3.0982, 0.1028, 2.1678, 0.1001, 0.9422, 0.3371, 2.3531, 4.373, 2.3061]  #2021-05-10T00:56:58.562\n0.6526 at x = [3.0979, 0.1028, 2.1682, 0.1001, 0.9406, 0.3369, 2.3529, 4.3725, 2.3066]  #2021-05-10T00:59:51.875\n0.6525 at x = [3.0974, 0.1028, 2.1675, 0.1001, 0.9411, 0.3369, 2.353, 4.3735, 2.306]  #2021-05-10T01:03:39.402","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"The performance of this design is shown below:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: )","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: )","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: )","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: )","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"It would probably be possible to do improve the performance somewhat over the 12-18 GHz band by tapering the requirements of the objective function at the band edges.  Also, in a serious design effort, several additional runs of the optimizer should be attempted, since results vary for stochastic algorithms like CMAES.","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"EditURL = \"<unknown>/manual.jl\"","category":"page"},{"location":"manual/#[PSSFSS](https://github.com/simonp0420/PSSFSS)-User-Manual","page":"Manual","title":"PSSFSS User Manual","text":"","category":"section"},{"location":"manual/#Introduction","page":"Manual","title":"Introduction","text":"","category":"section"},{"location":"manual/#What-Does-PSSFSS-Do?","page":"Manual","title":"What Does PSSFSS Do?","text":"","category":"section"},{"location":"manual/","page":"Manual","title":"Manual","text":"PSSFSS analyzes a multilayered structure as shown below that is stratified in the z direction and infinite in extent in the x and y directions:","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"(Image: fssgeometry)","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"There are N ge 2 dielectric layers. The kth layer is characterized by its complex permittivity epsilon_k, complex permeability mu_k, and width h_k (except for outer layers 1 and N which are assumed to be semi-infinite).  There are N-1 junction planes separating the layers. At some of these junction planes there may exist frequency selective surfaces (FSSs) or polarization selective surfaces (PSSs) consisting of zero-thickness periodic patterns of metallization. PSSFSS will determine the generalized scattering matrix (GSM) for this structure which fully characterizes it in terms of illumination by an incoming plane wave of arbitrary polarization incident from either Region 1 or Region N.","category":"page"},{"location":"manual/#A-Quick-Example","page":"Manual","title":"A Quick Example","text":"","category":"section"},{"location":"manual/","page":"Manual","title":"Manual","text":"Here is an example run of PSSFSS for a 4-sheet meanderline polarizer design from one of the first papers on the subject: T. L. Blackney, J. R. Burnett, and S. B. Cohn, “A design method for meander-line circular polarizers” presented at 22nd Annual Antenna Symposium, Oct. 1972. Detailed explanations of the code are omitted for now.","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"using PSSFSS\noutersheet = meander(a=0.3535, b=0.707, h=0.28, w1=0.018,\n                     w2=0.018, ntri=800, units=inch,rot=45)\ninnersheet = meander(a=0.3535, b=0.707, h=0.37, w1=0.027,\n                     w2=0.027, ntri=800, units=inch,rot=45)\nflist = 3:0.25:9\nsteering = (ϕ=0, θ=0)\nsubstrate = Layer(ϵᵣ=2.52, width=0.01inch)\nspacer(width) = Layer(width=width, ϵᵣ=1.08)\nstrata = [  Layer(),\n            outersheet, substrate, spacer(0.2inch),\n            innersheet, substrate, spacer(0.3inch),\n            innersheet, substrate, spacer(0.2inch),\n            outersheet, substrate,\n            Layer()  ]\noutputs = [\"blackney.csv\"  @outputs FGHz ar21db(h)]\nresults = analyze(strata, flist, steering, outlist=outputs)","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"Assuming that the above code is contained in the file \"blackney.jl\" it can be run from the Julia prompt via include(\"blackney.jl\"), after which a CSV file \"blackney.csv\" is created, containing the frequency in GHz in the first column and axial ratio in dB in the second. It can be plotted in Julia as follows:","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"using Plots, DelimitedFiles\n\np = plot(title=\"Blackney 1972 Polarizer\", xlabel=\"Frequency (GHz)\",\n                                          ylabel=\"Axial Ratio (dB)\")\ndata = readdlm(\"blackney.csv\", ',', skipstart=1)\nplot!(p, data[:,1],data[:,2],shape=:square,color=:red,label=\"PSSFSS\")\ndat = readdlm(\"blackney_ar_digitized.csv\", ',')\nscatter!(p, dat[:,1],dat[:,2],color=:blue,shape=:x,label=\"Measured\")\ndisplay(p)","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"Note that we also graphed the measured results digitized from the plot presented in the paper. Here is the comparison plot:","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"(Image: )","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"The PSSFSS run took about 30 seconds on my machine for 4 meanderline PSS sheets analyzed at 25 frequencies.","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"I hope this example whetted your appetite to learn more about PSSFSS!","category":"page"},{"location":"manual/#Recommendations-for-Hardware-and-Software","page":"Manual","title":"Recommendations for Hardware and Software","text":"","category":"section"},{"location":"manual/","page":"Manual","title":"Manual","text":"PSSFSS is written in the Julia programming language. You must have Julia installed to use PSSFSS. For Windows users, I recommend using the Chocolatey package manager to handle the Julia installation.  For Linux and Mac users, I recommend using JILL.py to manage the installation.","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"It goes without saying that computational electromagnetics is compute intensive. You will want to run PSSFSS on a rather \"beefy\" machine. A machine with multiple cores will provide the best experience since the code is multi-threaded. Also, PSSFSS can use a lot of RAM–a minimum of 16 GBytes RAM is recommended. The examples provided in this documentation were run on either a Windows or Linux machine, both equipped with an 8-core Intel(R) Core(TM) i7-9700 processor clocked at 3 GHz, with either 32 GBytes (Windows) or 64 GBytes (Linux) RAM, with multi-threading enabled via the -t auto Julia startup option. Multi-threading must be explicitly enabled in Julia.  Please see this section of the Julia documentation for details.","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"You will need a text editor to create Julia scripts that run PSSFSS.  One of the best for this purpose is VS Code, which has extensive support for both editing and running Julia via the julia-vscode extension.  Again, Windows users can conveniently install VS Code using Chocolatey.  Whatever your choice of editor, installation and use of the JuliaMono fonts is highly recommended. JuliaMono exploits Julia's support for Unicode fonts and allows one to use standard engineering symbols for electromagnetic quantities directly in Julia scripts; symbols such as ϵᵣ, μᵣ, θ, ϕ, and tanδ.","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"An alternative to using a text editor is to run scripts from a Jupyter notebook.  See the IJulia package for further details.","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"It is strongly suggested that PSSFSS users also install the Plots package.  This will allow easy visualization of the FSS/PSS element triangulations produced by PSSFSS, in addition to providing a convenient means to plot analysis results.","category":"page"},{"location":"manual/#The-PSSFSS-Analysis-Process","page":"Manual","title":"The PSSFSS Analysis Process","text":"","category":"section"},{"location":"manual/","page":"Manual","title":"Manual","text":"Here are the steps in the analysis process.","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"Strata: Specify the type and geometry of the FSS/PSS sheet(s) and intervening dielectric layers.\nSteering: Specify the desired values of the unit cell incremental phasing or of the set of incidence angles to be considered.\nSpecify the frequencies at which the structure is to be analyzed.\nSpecify any outputs to be written to one or more CSV files.\nInvoke the analysis function to perform the desired analysis. This will generate a log file, a \"results\" file, and the output files specified in Step 4.\nOptionally, extract additional outputs from the results returned by analyze via a call to extract_result, or from the results file via a call to extract_result_file.\nPlot or export extracted outputs.","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"We dissect these steps below...","category":"page"},{"location":"manual/#Strata","page":"Manual","title":"Strata","text":"","category":"section"},{"location":"manual/#Layer","page":"Manual","title":"Layer","text":"","category":"section"},{"location":"manual/","page":"Manual","title":"Manual","text":"Dielectric layers are created with the Layer function:","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"using PSSFSS # Brings PSSFSS functions and types into scope\nLayer() # Defaults to zero-thickness vacuum layer","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"Layer(ϵᵣ=2.2, tanδ=0.003, width=20mil) # Available length units include mil, inch, mm, cm","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"Layers and sheets can be assigned to Julia variables to avoid repetitive typing:","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"duroid = Layer(ϵᵣ=2.2, tanδ=0.003, width=20mil)\nfoam = Layer(epsr=1.05, width=0.25inch, tandel=0.001) # You can stick to ASCII if you prefer","category":"page"},{"location":"manual/#RWGSheet","page":"Manual","title":"RWGSheet","text":"","category":"section"},{"location":"manual/","page":"Manual","title":"Manual","text":"An RWGSheet object represents the triangulation of an FSS/PSS element, and is created by calling a constructor function for a particular style of sheet:","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"patch = rectstrip(Nx=10, Ny=10, Px=1, Py=1, Lx=0.5, Ly=0.5, units=cm)","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"The call to rectstrip above creates a RWGSheet object for a rectangular strip of dimensions 0.5 cm in the x and y directions, lying in a square unit cell of dimension 1 cm.  The triangulation uses 10 edges in the x and y directions (Nx and Ny).","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"You can get documentation for rectstrip by typing ?rectstrip at the Julia prompt. Other FSS/PSS element types: pecsheet, pmcsheet, polyring, meander, loadedcross, jerusalemcross.","category":"page"},{"location":"manual/#RWGSheet-Classes","page":"Manual","title":"RWGSheet Classes","text":"","category":"section"},{"location":"manual/","page":"Manual","title":"Manual","text":"The default class for a RWGSheet is 'J' meaning the triangulation represents electric surface currents flowing on a metalized region.  Alternatively, one can specify class='M' in the call to create the RWGSheet object, in which case the triangulation represents equivalent magnetic current in an aperture in an otherwise solid metallic surface.  So 'J'-class is used for metal wire, strip, patch, capacitive, etc. elements, while 'M'-class is used for slot, aperture, inductive, etc. elements.","category":"page"},{"location":"manual/#Plotting-Sheets","page":"Manual","title":"Plotting Sheets","text":"","category":"section"},{"location":"manual/","page":"Manual","title":"Manual","text":"We can visualize the triangulation using the plot function of the Plots package.","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"ENV[\"GKSwstype\"] = \"100\" # hide\nusing Plots\nplot(patch)\nsavefig(\"../src/assets/patch1.png\") # hide","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"(Image: )","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"plot(patch, linecolor=:red, unitcell=true)\nsavefig(\"../src/assets/patch2.png\") # hide","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"(Image: )","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"Here we changed the color and turned on the unit cell outline.  Other optional keywords that PSSFSS adds to or uses from the plot function:","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"plot keywords used by PSSFSS","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"Keyword Value(s) Description\nedges true/false Plot triangle edges?\nfaces false/true Plot triangle faces?\nnodes false/true Plot triangle vertices?\nunitcell false/true Plot unit cell?\nlinecolor :black/Any Plots color Color for triangle edges\nfillcolor :blue/Any Plots color Color for triangle faces\nfillalpha 0.8/0≤t≤1 Opacity for triangle faces\nmarkercolor :black/Any Plots color Color for triangle vertices\nmarkersize 1/n Size of triangle vertices\nmarkershape :circle/Any Plots marker shape Shape of triangle vertices\nrep (1,1)/(n₁,n₂) # of repetitions of unit cell to draw along the two periodic directions","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"plot(patch, rep=(4,3)) # Show multiple FSS elements\nsavefig(\"../src/assets/patch3.png\") # hide","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"(Image: )","category":"page"},{"location":"manual/#Strata:-The-full-structure-geometry","page":"Manual","title":"Strata: The full structure geometry","text":"","category":"section"},{"location":"manual/","page":"Manual","title":"Manual","text":"strata = [Layer(), patch, Layer()] # A vector of RWGSheet and Layer objects","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"The first and last entries must be lossless Layers with identical electrical parameters. They are assumed to be semi-infinite in extent.  In between these outer layers can be any number of other layers and FSS sheets.  Any two sheets cannot be adjacent: they must be separated by at least one Layer.","category":"page"},{"location":"manual/#Steering","page":"Manual","title":"Steering","text":"","category":"section"},{"location":"manual/","page":"Manual","title":"Manual","text":"You can specify a set of plane wave incidence angles to be analyzed, or a set of progressive phase shifts.","category":"page"},{"location":"manual/#Steering-Choice:-Specify-Incidence-angles","page":"Manual","title":"Steering Choice: Specify Incidence angles","text":"","category":"section"},{"location":"manual/","page":"Manual","title":"Manual","text":"The steering angles theta^textinc and phi^textinc specify the the incident wavevector for the plane wave illuminating the structure:","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":" veck_1 = k_1(hatx sintheta^textinc cos phi^textinc +\n                haty sintheta^textinc sin phi^textinc + hatz costheta^textinc)\n   quad text(Region  1  textincidence)\n   \n  veck_N = k_N(hatx sintheta^textinc cos phi^textinc +\n                haty sintheta^textinc sin phi^textinc - hatz costheta^textinc)\n   quad text(Region  N  textincidence)","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"Here 1 refers to the first Layer specified in the strata vector, and N refers to the last. Use a named tuple to specify the set of steering angles to be analyzed. Here are some examples:","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"steer = (θ=0, ϕ=0) # The most common case.  Note that \"inc\" is implied and not used.\nsteer = (θ=0:15:45, ϕ=[0,90])\nsteer = (phi=[0,90], theta=[0,15,30,45]) # Can use ASCII names if desired","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"The last two assignments above are equivalent as inputs to analyze, except for the order in which the angles will be processed. analyze will execute a triple loop consisting of the two incidence angles and frequency.  Frequency is always the innermost loop so it will vary most rapidly. In the second line above, since θ was specified first, it will be iterated in the outermost loop and will thus vary the slowest. In the last example above, ϕ will be iterated in the outmost loop, then θ, then frequency.","category":"page"},{"location":"manual/#Steering-Choice:-Specify-Phasing","page":"Manual","title":"Steering Choice: Specify Phasing","text":"","category":"section"},{"location":"manual/","page":"Manual","title":"Manual","text":"Plane wave illumination induces a progressive phase shift from cell to cell of the structure:","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":" V(vecr + mvecs_1 + nvecs_2) = e^-j(mpsi_1 + npsi_2) V(vecr)","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"for all integers m and n, where vecs_1 and vecs_2 are the lattice vectors of the 2D periodic structure, and psi_1 and psi_2 are the incremental phase shifts (a pair of real numbers).  Specify the phasings in degrees as a named tuple as in either of the following two examples:","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"steer = (ψ₁=10:10:40, ψ₂=0:5:15)\nsteer = (psi1=10:10:40, psi2=0) # Can use ASCII names if desired","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"The rules for order of execution are the same as for steering angles: The first named quantity is incremented in the outer loop.","category":"page"},{"location":"manual/#Steering:-Which-Choice?","page":"Manual","title":"Steering: Which Choice?","text":"","category":"section"},{"location":"manual/","page":"Manual","title":"Manual","text":"Because of the unique wide-band Green's function formulation used by PSSFSS, it is significantly (several times) faster to perform a frequency sweep if the incremental phase shifts are held constant with frequency, rather than the incidence angles.  The only exception is normal incidence, i.e. θ = 0, which implies that psi_1 = psi_2 = 0 for all frequencies. Note however, that by sweeping frequency over a number of different phasings, one can \"cover\" any desired range of scan angles.","category":"page"},{"location":"manual/#Analysis-Frequencies","page":"Manual","title":"Analysis Frequencies","text":"","category":"section"},{"location":"manual/","page":"Manual","title":"Manual","text":"Frequencies to be analyzed are entered in GHz as either a scalar value or a Julia \"iterable collection\" such as an Array or Range:","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"flist = 12\nflist = 2:2:12 # same as [2,4,6,8,10,12]\nflist = union(7:0.5:10, 20:0.5:25) # Two frequency bands","category":"page"},{"location":"manual/#Outputs","page":"Manual","title":"Outputs","text":"","category":"section"},{"location":"manual/#Standard-Output-Files","page":"Manual","title":"Standard Output Files","text":"","category":"section"},{"location":"manual/","page":"Manual","title":"Manual","text":"By default PSSFSS will create a log file named \"pssfss.log\" and a results file named \"pssfss.res\". The former is a text file and the latter is a binary (JLD2) file. The log file contains a recapitulation of the geometry being analyzed and a report on the progress and timing of the analysis. The results file contains the generalized scattering matrices computed by PSSFSS along with other information needed to generate any of the output parameters to be described shortly. The names used for these two files can be specified using the logfile and resultfile keyword arguments to analyze. If you wish to bypass creation of either of these files (not recommended), use, e.g. resultfile=devnull in the call to analyze.","category":"page"},{"location":"manual/#Requesting-Additional-Outputs","page":"Manual","title":"Requesting Additional Outputs","text":"","category":"section"},{"location":"manual/","page":"Manual","title":"Manual","text":"Before describing the syntax used to request additional outputs, we digress briefly to establish notation...","category":"page"},{"location":"manual/#Scattering-Parameters-Computed-by-PSSFSS","page":"Manual","title":"Scattering Parameters Computed by PSSFSS","text":"","category":"section"},{"location":"manual/","page":"Manual","title":"Manual","text":"The scattering matrix computed by PSSFSS relates the incoming and outgoing TE and TM travelling wave coefficients for Layers 1 and N of the stratified structure:","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":" \n(Image: fssgeometry) (Image: fssgeometry)","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"where","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"\n(Image: fssgeometry)","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"So we see that the individual partitions of the scattering matrix are each a 2 times 2 matrix, with boldsymbolS^11 and boldsymbolS^22 containing reflection coefficients and boldsymbolS^12 and boldsymbolS^21 containing transmission coefficients.","category":"page"},{"location":"manual/#The-@outputs-macro","page":"Manual","title":"The @outputs macro","text":"","category":"section"},{"location":"manual/","page":"Manual","title":"Manual","text":"The @outputs macro is used to request output performance parameters.  It can be used in three different ways:","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"It can be used as part of the outlist keyword argument to analyze to set up the outputs to be written to one or more CSV files during the analysis run.\nIt can be used as part of an input argument to extract_result_file to extract performance parameters from the results file generated by a previous analysis run.\nIt can be used as part of an input argument to extract_result to extract performance parameters from the Julia variable returned by the analysis function.","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"We'll see how to accomplish all these in a bit, but first let's look at the syntax and semantics of using @outputs. As a first example, we can request the (12) entry of boldsymbolS^21 via the following code:","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"@outputs s21(1,2)","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"Recall that this is the transmission coefficient for the amount of outgoing TE plane wave in Layer N due to illuminating Layer 1 with an incoming TM plane wave.","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"It isn't convenient to remember that (1,2) means (TE,TM), so PSSFSS lets you use a friendlier notation:","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"@outputs S21(te,tm) # Note that case is not significant","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"The above code fragment is exactly equivalent to the former one.  Case (capitalization) is not significant for the arguments of the @outputs macro, so s21(TE,tm), S21(TE,TM), etc. are all equivalent.","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"The previous constructions will fetch the coefficient as a complex number.  Most of the time this is not desired. To obtain the magnitude in dB, use e.g. S21dB(te,tm) and to obtain the phase angle in degrees use e.g. S21ang(te,tm).  Again, case is not significant, and \"1\" and \"te\" can be freely interchanged, as can \"2\" and \"tm\".","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"It is often desired to use a set of polarization basis vectors other than TE/TM to define field coefficients.  PSSFSS supports in addition to TE/TM the use of H/V for horizontal/vertical components (in the Ludwig 3) sense, and L/R for left-hand circular and right-hand circular polarization (in the IEEE sense).","category":"page"},{"location":"manual/#Examples","page":"Manual","title":"Examples","text":"","category":"section"},{"location":"manual/","page":"Manual","title":"Manual","text":"Here is an example for multiple outputs: frequency in GHz, crosspol reflection coefficient in Layer 1, axial ratio (in dB) for the outgoing wave in Layer 1 due to incoming horizontally polarized wave in Layer N:","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"@outputs FGHz s11dB(h,v) ar12dB(h)","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"Note that multiple arguments to @outputs are separated by spaces, with no commas or other punctuation between[1].","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"[1]: An alternative   syntax is, e.g. @outputs(FGHz, s11dB(h,v), ar12dB(h)) with no spaces   between the macro name and the opening parenthesis.","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"Another example for multiple outputs: frequency in GHz, incidence angles theta and phi, transmission coefficient magnitudes in dB to LHCP and RHCP for a vertically polarized incident wave:","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"@outputs FGHz θ ϕ s21dB(L,v) s21dB(R,V)\n@outputs FGHz theta phi s21dB(L,v) s21dB(R,V)","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"The above two macro invocations produce identical results, showing that you can use ASCII names for the incidence angles if desired.","category":"page"},{"location":"manual/#Table-of-Valid-@outputs-Parameters","page":"Manual","title":"Table of Valid @outputs Parameters","text":"","category":"section"},{"location":"manual/","page":"Manual","title":"Manual","text":"All parameters taking arguments can use any of 1, 2, TE, TM, H, V, L, and R. The parameters and their argument(s) can be typed without regard to capitalization.","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"Name(s) # of Arguments Description\nFGHz, FMHz 0 Frequency in GHz or MHz, resp.\nθ, theta, ϕ, phi 0 Incidence angles in degrees\nψ₁, ψ₂, psi1, psi2 0 Incremental phase shifts in degrees\ns11, s12, s21, s22 2 Complex coefficient\ns11mag, s12mag, s21mag, s22mag 2 Magnitude of coefficient\ns11db, s12db, s21db, s22db 2 Magnitude in dB of coefficient\ns11ang, s12ang, s21ang, s22ang 2 Phase angle in deg. of coefficient\nS11real, s12real, s21real, s22real 2 Real part of coefficient\nS11imag, s12imag, s21imag, s22imag 2 Imaginary part of coefficient\nar11db, ar12db, ar21db, ar22db 1 Axial ratio in dB\nΔipd12, dipd12, Δipd21, dipd21 0 Delta insertion phase delay in deg. (TE-TM)\nΔil12, dil12, Δil21, dil21 0 Delta insertion loss in dB (TE-TM)","category":"page"},{"location":"manual/#The-outlist-Keyword-Argument-to-analyze","page":"Manual","title":"The outlist Keyword Argument to analyze","text":"","category":"section"},{"location":"manual/","page":"Manual","title":"Manual","text":"outlist is used to specify data to be written to CSV files during the PSSFSS analysis, in the form of a matrix with one or more rows. Each row starts with a string containing the name of a CSV file; the rest of the row is an invocation of @outputs (or the result of such an invocation assigned to a Julia variable).  Here is an example that will create a pair of CSV files, one containing transmission coefficient magnitudes and the other containing reflection coefficient magnitudes (both in dB).  Frequency is also included in the CSV file to facilitate easy plotting:","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"...\ncsvout = [\"transmitted.csv\"  @outputs FGHz s21dB(h,h) s21db(v,v)\n          \"reflected.csv\"    @outputs FGHz s11dB(h,h) s11dB(v,v) ]\n...\nanalyze(strata, flist, (θ=0, ϕ=0), outlist=csvout)","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"The matrix is delineated using square brackets. Note that there can be no commas between entries in a row. If more than a single incidence angle had been specified then we would also have wanted to include incidence angles in the CSV files.","category":"page"},{"location":"manual/#Using-the-Result-File","page":"Manual","title":"Using the Result File","text":"","category":"section"},{"location":"manual/","page":"Manual","title":"Manual","text":"The result file generated by analyze can be used to obtain any quantity available to the @outputs macro.  Consider the Blackney meanderline polarizer example presented earlier.  For that run, the result file name was left at its default value \"pssfss.res\".  We can use the extract_result_file function to extract results from it as follows:","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"julia> dat = extract_result_file(\"pssfss.res\", @outputs FGHz ar21db(h))\n25×2 Matrix{Float64}:\n3.0   6.52976\n3.25  5.39855\n3.5   4.32914\n3.75  3.3334\n4.0   2.42903\n4.25  1.64223\n⋮\n8.25  1.91583\n8.5   2.76022\n8.75  3.87568\n9.0   5.40385","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"As illustrated above, the value returned by extract_result_file is a two-dimensional array (a Matrix), with each column corresponding to a parameter of the @outputs macro.","category":"page"},{"location":"manual/#Using-the-analyze-Function-Return-Value","page":"Manual","title":"Using the analyze Function Return Value","text":"","category":"section"},{"location":"manual/","page":"Manual","title":"Manual","text":"The variable returned from analyze can be used in a similar way to the result file to obtain any quantity available to the @outputs macro, but for this purpose we use the extract_result function:","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"julia> results = analyze(strata, flist, steering, outlist=outputs);\njulia> dat = extract_result(results, @outputs FGHz ar21db(h))\n25×2 Matrix{Float64}:\n3.0   6.52976\n3.25  5.39855\n3.5   4.32914\n3.75  3.3334\n4.0   2.42903\n4.25  1.64223\n⋮\n8.25  1.91583\n8.5   2.76022\n8.75  3.87568\n9.0   5.40385","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"As illustrated above, the value returned by extract_result is a two-dimensional array (a Matrix), with each column corresponding to a parameter of the @outputs macro.","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"This page was generated using Literate.jl.","category":"page"},{"location":"function_index/#Index","page":"Index","title":"Index","text":"","category":"section"},{"location":"function_index/","page":"Index","title":"Index","text":"","category":"page"},{"location":"reference/#[PSSFSS](https://github.com/simonp0420/PSSFSS)-Function-Reference","page":"Function Reference","title":"PSSFSS Function Reference","text":"","category":"section"},{"location":"reference/","page":"Function Reference","title":"Function Reference","text":"analyze\nextract_result\nextract_result_file\njerusalemcross\nLayer\nloadedcross\nmeander\npecsheet\npmcsheet\npolyring\nread_sheet_data\nrectstrip","category":"page"},{"location":"reference/#PSSFSS.analyze","page":"Function Reference","title":"PSSFSS.analyze","text":"analyze(strata::Vector, flist, steering; outlist=[], logfile=\"pssfss.log\", resultfile=\"pssfss.res\", showprogress::Bool=true)\n\nAnalyze a full FSS/PSS structure over a range of frequencies and steering angles/phasings.   Generate output files as specified in outlist.\n\nPositional Arguments\n\nstrata:  A vector of Layer and Sheet objects. The first and last entries must be of type Layer.\nflist: An iterable containing the analysis frequencies in GHz.\nsteering: A length 2 NamedTuple containing as keys the steering parameter labels and as values the iterables that define the values of steering parameters to be analyzed.\none of {:phi ,:ϕ} and one of {:theta, :θ}, or\none of {:psi1 ,:ψ₁} and one of {:psi2, :ψ₂}.  \nAll steering parameters are input in degrees.\nThe program will analyze while iterating over a triple loop over the two steering  parameters and frequency, with frequency in the innermost loop (i.e. varying the fastest). The steering parameter listed first will be in the outermost loop and will therefore vary most slowly.\n\nKeyword Arguments\n\noutlist:  A matrix with 2 columns.  The first column in each row is a string containing the name of the CSV file to write the output to.  The second entry in each row is a tuple generated by the @outputs macro of the Outputs module. The  contents of the specified file(s) will be updated as the program completes each analysis frequency.\nlogfile:  A string containing the name of the log file to which timing and other  information about the run is written. Defaults to \"pssfss.log\". If this file already exists, it will be overwritten.\nresultfile:  A string containing the name of the results file. Defaults to pssfss.res. If this file already exists, it will be overwritten.  It is a binary file that contains information (including the generalized scattering matrix) from  the analysis performed for each scan condition and frequency. The result file can be post-processed to produce similar or additional outputs that were requested at run time via the outlist argument.\nshowprogress: If true (default), then show progress bar during execution.\n\n\n\n\n\n","category":"function"},{"location":"reference/#PSSFSS.Outputs.extract_result","page":"Function Reference","title":"PSSFSS.Outputs.extract_result","text":"extract_result(r::Result, ops::NTuple{N,Outfun}) --> Row Matrix\nextract_result(r::AbstractVector{Result}, ops::NTuple{N,Outfun}) --> Matrix\n\nReturn a matrix of outputs extracted from a Result instance or vector.  ops is a  NTuple as returned by the @outputs macro.\n\nExample\n\nresults = analyze(...)\nops = @outputs FGHz s11dB(h,h) s11ang(h,h)\ndata = extract_result(results, ops)\n# or data = extract_result(results[1], ops) # returns a single row\n\n\n\n\n\n","category":"function"},{"location":"reference/#PSSFSS.Outputs.extract_result_file","page":"Function Reference","title":"PSSFSS.Outputs.extract_result_file","text":"extract_result_file(fname::AbstractString, ops::Tuple) --> Matrix\n\nReturn a matrix of outputs extracted from a results file.  ops is a  Tuple returned by the @outputs macro.\n\nExample\n\nops = @outputs FGHz S11DB(H,H) S11ANG(H,H)\ndata = extract_result_file(\"pssfss.res\", ops)\n\n\n\n\n\n","category":"function"},{"location":"reference/#PSSFSS.Elements.jerusalemcross","page":"Function Reference","title":"PSSFSS.Elements.jerusalemcross","text":"jerusalemcross(;P::Real, L1::Real, L2::Real, A::Real, B::Real, w::Real, \n             ntri::Int, units::PSSFSSLength, kwargs...)\n\nDescription:\n\nCreate a variable of type RWGSheet that contains the triangulation for a \"loaded cross\" type of geometry. The returned value has fields s₁, s₂, β₁, β₂, ρ, e1, e2, fv, fe,  and fr properly initialized.\n\nThe following \"ascii art\" attempts to show the definitions of the geometrical parameters P, L1, L2, A, B, and w. Note that the structure is supposed to be symmetrical wrt reflections about its horizontal and vertical centerlines, and wrt reflections through a line oriented at a 45 degree angle wrt the x-axis.\n\n┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ \n┃                                                       ┃ _______\n┃               ┌────────────────────────┐              ┃    ↑\n┃               │ ┌───────────────────┐  │              ┃    │\n┃               │ └───────┐    ┌──────┘  │              ┃    │\n┃               └──────┐  │    │ ┌───────┘              ┃    │\n┃                      │  │    │ │                      ┃    │\n┃  ┌───────┐           │  │    │ │            ┌──────┐  ┃    │\n┃  │  ┌─┐  │           │  │    │ │            │ ┌──┐ │  ┃    │\n┃  │  │ │  │           │  │   →│ │← w         │ │  │ │  ┃    │\n┃  │  │ │  │           │  │    │ │            │ │  │ │  ┃    │\n┃  │  │ │  └───────────┘  │    │ └────────────┘ │  │ │  ┃    │\n┃  │  │ └─────────────────┘    └────────────────┘  │ │  ┃    \n┃  │  │                                            │ │  ┃   L1 \n┃  │  │ ┌─────────────────┐    ┌────────────────┐  │ │  ┃  \n┃  │  │ │  ┌───────────┐  │    │ ┌────────────┐ │  │ │  ┃    │\n┃  │  │ │  │           │  │    │ │            │ │  │ │  ┃    │\n┃  │  │ │  │           │  │    │ │            │ │  │ │  ┃    │\n┃  │  └─┘  │          →│  │    │ │← L2     B →│ └──┘ │← ┃    │\n┃  └───────┘           │  │    │ │            └──────┘  ┃    │\n┃                      │  │    │ │                      ┃    │\n┃               ┌──────┘  │    │ └───────┐              ┃    │\n┃               │ ┌───────┘    └──────┐  │              ┃    │\n┃               │ └───────────────────┘  │              ┃    │\n┃               └────────────────────────┘              ┃ ___↓___\n┃               |<───────── A ──────────>|              ┃\n┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛ \n|<─────────────────────── P ───────────────────────────>|\n\nArguments:\n\nAll arguments are keyword arguments which can be entered in any order.\n\nRequired arguments:\n\nP: The period, i.e. the side length of the square unit cell.\nL1,L2, A, B, w: Geometrical parameters as defined above.  Note that it is permissible  to specify w ≥ L2/2 and/or w ≥ B/2 in which case the respective region will  be filled in solidly with triangles.  If both conditions hold, then the entire structure will be  filled in (i.e., singly-connected).  In that case the L2 and B dimensions will be used   for the respective widths of the arms, and w will not be used.\nunits:  Length units (mm, cm, inch, or mil)\nntri:  The desired total number of triangles.  This is a guide/request,           the actual number will likely be different.\n\nOptional arguments:\n\nclass::Char='J'  Specify the class, either 'J' or 'M'.. If 'J',  the unknowns are electric surface           currents, as used to model a wire or metallic patch-type FSS.  If 'M',  the unknowns are          magnetic surface currents, as used to model a slot or aperture in a perfectly conducting plane.\ndx::Real=0.0, dy::Real=0.0:  These specify the offsets in the x and y directions applied to the entire           unit cell and its contents.  Length units are as specified in the units keyword. \nrot::Real=0.0:  Counterclockwise rotation angle in degrees applied to the entire unit cell and its contents.           This rotation is applied prior to any offsets specified in dx and dy.\nRsheet::Real=0.0:  The surface resistance of the FSS conductor in units of Ohm per square.             This is only meaningful for a sheet of class 'J'.\nfufp::Bool:  This keyword is not usually required.                fufp is mnemonic for \"Find Unique Face Pairs\".  If true, the code will search the                triangulation for classes of triangle               pairs that are the equivalent in the toeplitz sense.  I.e., if triangle pairs (A,B) and (C,D) belong               to the same equivalence class,  the six vertices in the pair (A,B) can be made to coincide                with those of pair (C,D) by a simple translation. If there are many such equivalent pairs,                a significant decrease in matrix fill time ensues by exploiting the equivalence.  The tradeoff               is the time needed to identify them.  The default value is true for the strip and                meander styles (those employing structured meshes) and false for the remaining styles                 (those employing unstructured meshes).\nsave::String=\"\" Specifies a file name to which the sheet triangulation and unit cell data is to be written,                  typically to be plotted later.\n\n\n\n\n\n","category":"function"},{"location":"reference/#PSSFSS.Layers.Layer","page":"Function Reference","title":"PSSFSS.Layers.Layer","text":"Layer <: Any\n\nAn instance of the Layer type represents a single dielectric layer of the physical structure. It contains the electrical properties of the dielectric layer. For layers not included in a Gblock, an instance of Layer also specifies the periodicity (via the reciprocal lattice vectors) and stores the mode constants for the Floquet modes present  in the layer. \n\nLayer(width::0mm, ϵᵣ=1.0, tanδ=0.0, μᵣ=1.0, mtanδ=0.0)\nLayer(width::0mm, epsr=1.0, tandel=0.0, mur=1.0, mtandel=0.0)\n\nCreate a Layer instance with the specified electrical properties.  All arguments are optional keyword arguments with default values as shown above. They can be  supplied in any order.  Typically the first and last Layer in a composite FSS or PSSFSS structure are generated by a call to Layer() to represent the semi-infinite vacuum  regions surrounding the structure.  Using the default width of 0mm means that the phase reference planes are located at the surfaces just adjacent to these semi-infinite end Layers.\n\nArguments\n\nwidth: The layer width (i.e. thickness) expressed as a        Unitful        length quantity. For convenience the following unit       suffixes are exported by this module: m, cm, mil, inch,       so one can specify, e.g., width=20mil.  Note that width can        be negative for the first and/or final layer of the composite structure,       which has the effect of shifting the phase reference plane towards       the interior of the composite structure.  This is sometimes needed        when interfacing with other programs, such as TEP file generation for       Ticra's GRASP program.\nϵᵣ or epsr: Relative permittivity of the dielectric.\ntanδ or tandel: Loss tangent (electrical) of the dielectric.\nμᵣ or mur: Relative permeability of the dielectric.\nmtanδ or mtandel: Loss tangent (magnetic) of the dielectric.\n\n\n\n\n\n","category":"type"},{"location":"reference/#PSSFSS.Elements.loadedcross","page":"Function Reference","title":"PSSFSS.Elements.loadedcross","text":"loadedcross(;s1::Vector{<:Real}, s2::Vector{<:Real}, L1::Real, L2::Real, w::Real, \n             ntri::Int, units::PSSFSSLength, kwargs...)\n!\n\nDescription:\n\nCreate a variable of type RWGSheet that contains the triangulation for a \"loaded cross\" type of geometry. The returned value has fields s₁, s₂, β₁, β₂, ρ, e1, e2, fv, fe,  and fr properly initialized.\n\nThe following (very poor) \"ascii art\" attempts to show the definitions of the geometrical parameters L1, L2 and w. Note that the structure is supposed to be symmetrical wrt reflections about its horizontal and vertical centerlines, and wrt reflections through a line oriented at a 45 degree angle wrt the x-axis.\n\n ^                 ----------------\n |                 |  _________   |\n |                 |  |       |   |\n |                 |  |       |   |\n |                 |  |    -->|   |<--- W\n |                 |  |       |   |\n |                 |  |       |   |\n |     ------------   |       |   -------------\n |     |  |-----------|       |------------|  |\n |     |  |                                |  |\n L1    |  |                                |  |\n |     |  |                                |  |\n |     |  |                                |  |\n |     |  ------------          ------------  |\n |     |-----------   |        |  ------------|\n |                 |  |        |  |\n |                 |  |        |  |\n |                 |  |        |  |\n |                 |  |        |  |\n |                 |  |________|  |\n |                 |              |\n V                 ----------------\n\n                   <---- L2 ------>\n\nArguments:\n\nAll arguments are keyword arguments which can be entered in any order.\n\nRequired arguments:\n\nP: The period, i.e. the side length of the square unit cell.\nL1,L2,w: Geometrical parameters as defined above.  Note that it is permissible  to specify w ≥ L2/2 in which case a solid (i.e., singly-connected) cross will be   generated.  In that case the L2 dimension will be used for the width of the cross pieces.\nunits:  Length units (mm, cm, inch, or mil)\nntri:  The desired total number of triangles.  This is a guide/request,           the actual number will likely be different.\n\nOptional arguments:\n\nclass::Char='J'  Specify the class, either 'J' or 'M'.. If 'J',  the unknowns are electric surface           currents, as used to model a wire or metallic patch-type FSS.  If 'M',  the unknowns are          magnetic surface currents, as used to model a slot or aperture in a perfectly conducting plane.\ndx::Real=0.0, dy::Real=0.0:  These specify the offsets in the x and y directions applied to the entire           unit cell and its contents.  Length units are as specified in the units keyword. \nrot::Real=0.0:  Counterclockwise rotation angle in degrees applied to the entire unit cell and its contents.           This rotation is applied prior to any offsets specified in dx and dy.\nRsheet::Real=0.0:  The surface resistance of the FSS conductor in units of Ohm per square.             This is only meaningful for a sheet of class 'J'.\nfufp::Bool:  This keyword is not usually required.                fufp is mnemonic for \"Find Unique Face Pairs\".  If true, the code will search the                triangulation for classes of triangle               pairs that are the equivalent in the toeplitz sense.  I.e., if triangle pairs (A,B) and (C,D) belong               to the same equivalence class,  the six vertices in the pair (A,B) can be made to coincide                with those of pair (C,D) by a simple translation. If there are many such equivalent pairs,                a significant decrease in matrix fill time ensues by exploiting the equivalence.  The tradeoff               is the time needed to identify them.  The default value is true for the strip and                meander styles (those employing structured meshes) and false for the remaining styles                 (those employing unstructured meshes).\nsave::String=\"\" Specifies a file name to which the sheet triangulation and unit cell data is to be written,                  typically to be plotted later.\norient::Real=0.0:  Counterclockwise rotation angle in degrees used to locate the initial          vertex of the polygonal rings.  The default is to locate the vertex on the          positive x-axis.\n\n\n\n\n\n","category":"function"},{"location":"reference/#PSSFSS.Elements.meander","page":"Function Reference","title":"PSSFSS.Elements.meander","text":"meander(;a::Real, b::Real, h::Real, w1::Real, w2::Real, ntri::Int,\n              units::PSSFSSLength, kwarg...) --> sheet::RWGSheet\n\nDescription:\n\nReturn a variable of type RWGSheet that contains the triangulation for  a meanderline strip.  The returned sheet has the components s₁, s₂,  β₁, β₂, ρ, e1, e2, fv, fe, and fr properly initialized.   Geometrical parameters are shown in the following diagram:\n\n  - - - - - - - - - - - - - - - - - - - - - - - - -             ^\n |                                                |             |\n |                                                |             |\n |                                                |             |\n |                                                |             |\n |                                                |             |\n |            <-------- a/2 ------->              |             |\n |               (center-to-center)               |             |\n |                                                |             |\n |          ----------------------------          |  ^    ^     b\n |          |                          |          |  w2   |     |\n |          |                          |          |  |    |     |\n |          | -----------------------  |          |  v    |     |\n |          | |                     |  |          |             |\n |       -->| |<--w1           w1-->|  |<--       |       h     |\n ------------ |                     |  ------------  ^          |\n |            |                     |             |  w2   |     |\n |            |                     |             |  |    |     |\n ------------ - - - - - - - - - - - ---------------  v    v     v\n\n <-------------------- a ------------------------->\n\na and b are unit cell dimensions.  w1 and w2 are the widths    of the vertical and horizontal strips, resp. h is the total    height of the meander.\n\nArguments:\n\nAll arguments are keyword arguments which can be entered in any order.\n\nRequired arguments:\n\na,b,h,w1, w2: Geometrical parameters as defined above.\nunits:  Length units (mm, cm, inch, or mil)\nntri:  The desired total number of triangles.           This is a guide, the actual number will likely be different.\n\nOptional arguments:\n\nclass::Char='J'  Specify the class, either 'J' or 'M'.. If 'J',  the unknowns are electric surface           currents, as used to model a wire or metallic patch-type FSS.  If 'M',  the unknowns are          magnetic surface currents, as used to model a slot or aperture in a perfectly conducting plane.\ndx::Real=0.0, dy::Real=0.0:  These specify the offsets in the x and y directions applied to the entire           unit cell and its contents.  Length units are as specified in the units keyword. \nrot::Real=0.0:  Counterclockwise rotation angle in degrees applied to the entire unit cell and its contents.           This rotation is applied prior to any offsets specified in dx and dy.\nRsheet::Real=0.0:  The surface resistance of the FSS conductor in units of Ohm per square.             This is only meaningful for a sheet of class 'J'.\nfufp::Bool:  This keyword is not usually required.                fufp is mnemonic for \"Find Unique Face Pairs\".  If true, the code will search the                triangulation for classes of triangle               pairs that are the equivalent in the toeplitz sense.  I.e., if triangle pairs (A,B) and (C,D) belong               to the same equivalence class,  the six vertices in the pair (A,B) can be made to coincide                with those of pair (C,D) by a simple translation. If there are many such equivalent pairs,                a significant decrease in matrix fill time ensues by exploiting the equivalence.  The tradeoff               is the time needed to identify them.  The default value is true for the strip and                meander styles (those employing structured meshes) and false for the remaining styles                 (those employing unstructured meshes).\nsave::String=\"\" Specifies a file name to which the sheet triangulation and unit cell data is to be written,                  typically to be plotted later.\n\n\n\n\n\n\n\n","category":"function"},{"location":"reference/#PSSFSS.Elements.pecsheet","page":"Function Reference","title":"PSSFSS.Elements.pecsheet","text":"pecsheet()\n\nReturn a variable of type RWGSheet that contains a perfect electric conducting sheet (i.e. an \"E-wall\").\n\n\n\n\n\n","category":"function"},{"location":"reference/#PSSFSS.Elements.pmcsheet","page":"Function Reference","title":"PSSFSS.Elements.pmcsheet","text":"pmcsheet()\n\nReturn a variable of type RWGSheet that contains a perfect magnetic conducting sheet (i.e. an \"H-wall\").\n\n\n\n\n\n","category":"function"},{"location":"reference/#PSSFSS.Elements.polyring","page":"Function Reference","title":"PSSFSS.Elements.polyring","text":"polyring(;s1::Vector, s2::Vector, a::Vector, b::Vector, sides::Int ,ntri::Int ,orient::Real, units::PSSFSSLength, kwargs...) --> RWGSheet\n\nReturn a variable of type RWGSheet that contains the triangulation for one or more concentric annular regions bounded by polygons.\n\nArguments:\n\nAll arguments are keyword arguments which can be entered in any order.\n\nRequired arguments:\n\nunits:  Length units (mm, cm, inch, or mil)\ns1 and s2:  2-vectors containing the unit cell lattice vectors.\na and b:  n-vectors (n>=1) of the same length providing the inner and outer radii, respectively of the polygonal rings.              Entries in a and b must be strictly increasing, except for possibly b[end] as discussed               below. b[i] > a[i] ∀ i ∈ 1:n, except possibly b[end] as discussed below.               a[1] may be zero to denote a solid (non-annular) polygon as the first \"ring\".               It is possible to let the outermost ring to extend completely to the unit cell boundary.                 This is specified by setting b[end] < 0, in which case -b[end] is interpreted as the                number of edges along the shorter of the s1 and s2 lattice vectors.\nsides:  The number (>= 3) of polygon sides.\nntri:  The desired total number of triangles distributed among all the annular regions. This is a guide, the actual number           will likely be different.\n\nOptional arguments:\n\nclass::Char='J'  Specify the class, either 'J' or 'M'.. If 'J',  the unknowns are electric surface           currents, as used to model a wire or metallic patch-type FSS.  If 'M',  the unknowns are          magnetic surface currents, as used to model a slot or aperture in a perfectly conducting plane.\ndx::Real=0.0, dy::Real=0.0:  These specify the offsets in the x and y directions applied to the entire           unit cell and its contents.  Length units are as specified in the units keyword. \nrot::Real=0.0:  Counterclockwise rotation angle in degrees applied to the entire unit cell and its contents.           This rotation is applied prior to any offsets specified in dx and dy.\nRsheet::Real=0.0:  The surface resistance of the FSS conductor in units of Ohm per square.             This is only meaningful for a sheet of class 'J'.\nfufp::Bool:  This keyword is not usually required.                fufp is mnemonic for \"Find Unique Face Pairs\".  If true, the code will search the                triangulation for classes of triangle               pairs that are the equivalent in the toeplitz sense.  I.e., if triangle pairs (A,B) and (C,D) belong               to the same equivalence class,  the six vertices in the pair (A,B) can be made to coincide                with those of pair (C,D) by a simple translation. If there are many such equivalent pairs,                a significant decrease in matrix fill time ensues by exploiting the equivalence.  The tradeoff               is the time needed to identify them.  The default value is true for the strip and                meander styles (those employing structured meshes) and false for the remaining styles                 (those employing unstructured meshes).\nsave::String=\"\" Specifies a file name to which the sheet triangulation and unit cell data is to be written,                  typically to be plotted later.\norient::Real=0.0:  Counterclockwise rotation angle in degrees used to locate the initial          vertex of the polygonal rings.  The default is to locate the vertex on the          positive x-axis.\n\n\n\n\n\n","category":"function"},{"location":"reference/#PSSFSS.Sheets.read_sheet_data","page":"Function Reference","title":"PSSFSS.Sheets.read_sheet_data","text":"read_sheet_data(filename::AbstractString)::RWGSheet\n\nRead the sheet geometry data from a JLD2 file named in filename.\n\n\n\n\n\n","category":"function"},{"location":"reference/#PSSFSS.Elements.rectstrip","page":"Function Reference","title":"PSSFSS.Elements.rectstrip","text":"rectstrip(;Lx::Real, Ly::Real, Nx::Int, Ny::Int, Px::Real, Py::Real, units::PSSFSSLength, kwargs...)\n\nReturn a variable of type RWGSheet that contains the triangulation for a rectangular strip.\n\nArguments:\n\nAll arguments are keyword arguments which can be entered in any order.\n\nRequired arguments:\n\nunits:  Length units (mm, cm, inch, or mil)\nLx and Ly:  Lengths of the strip in the x and y directions.\nPx and Py:  Lengths (periods) of the rectangular unit cell in the x and y directions.\nNx and Ny:  Number of line segments in the x and y directions, for dividing up the strip into                 rectangles, which are  triangulated by adding a diagonal to each rectangle.\n\nOptional arguments:\n\nclass::Char='J'  Specify the class, either 'J' or 'M'.. If 'J',  the unknowns are electric surface           currents, as used to model a wire or metallic patch-type FSS.  If 'M',  the unknowns are          magnetic surface currents, as used to model a slot or aperture in a perfectly conducting plane.\ndx::Real=0.0, dy::Real=0.0:  These specify the offsets in the x and y directions applied to the entire           unit cell and its contents.  Length units are as specified in the units keyword. \nrot::Real=0.0:  Counterclockwise rotation angle in degrees applied to the entire unit cell and its contents.           This rotation is applied prior to any offsets specified in dx and dy.\nRsheet::Real=0.0:  The surface resistance of the FSS conductor in units of Ohm per square.             This is only meaningful for a sheet of class 'J'.\nfufp::Bool:  This keyword is not usually required.                fufp is mnemonic for \"Find Unique Face Pairs\".  If true, the code will search the                triangulation for classes of triangle               pairs that are the equivalent in the toeplitz sense.  I.e., if triangle pairs (A,B) and (C,D) belong               to the same equivalence class,  the six vertices in the pair (A,B) can be made to coincide                with those of pair (C,D) by a simple translation. If there are many such equivalent pairs,                a significant decrease in matrix fill time ensues by exploiting the equivalence.  The tradeoff               is the time needed to identify them.  The default value is true for the strip and                meander styles (those employing structured meshes) and false for the remaining styles                 (those employing unstructured meshes).\nsave::String=\"\" Specifies a file name to which the sheet triangulation and unit cell data is to be written,                  typically to be plotted later.\n\n\n\n\n\n","category":"function"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = PSSFSS","category":"page"},{"location":"#[PSSFSS](https://github.com/simonp0420/PSSFSS)-analysis-of-polarization-and-frequency-selective-surfaces-in-Julia","page":"Home","title":"PSSFSS - analysis of polarization and frequency selective surfaces in Julia","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Author: Peter S. Simon (@simonp0420)","category":"page"},{"location":"","page":"Home","title":"Home","text":"PSSFSS is a Julia package for analyzing  polarization selective surfaces (PSSs), frequency selective surfaces (FSSs),  reflectarray elements,  radomes, and similar structures.  It is intended to be useful to antenna design engineers and others who work in applied electromagnetic engineering.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The user specifies the geometry to be analyzed as a Vector containing two or more dielectric Layers  and zero or more Sheet objects that define the PSS/FSS surfaces.  Due to the included plot recipes, the surfaces  and their associated triangulations can be conveniently visualized using Julia's standard  Plots package. After also specifying the scan angles or unit cell incremental phasings, frequencies to be analyzed, and optionally selecting performance parameters to be written to CSV file(s),  the user then invokes the analyze function to perform the analysis.  Post-processing and plotting of results can be performed in the same analysis script using the immensely powerful Julia programming language.","category":"page"},{"location":"#Features","page":"Home","title":"Features","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Designed to be useful and accessible to working engineers.\nAccommodates planar FSS/PSS surfaces with no limits to number of dielectric layers or FSS/PSS sheets.\nSimple specification of geometry to be analyzed.\nAutomatically chooses number of modes needed for cascading multiple FSS/PSS sheets using generalized scattering matrices (GSMs).\nSupports (approximate) cascading multiple sheets of different periodicities, as in a multilayer meanderline polarizer.\nSolution of mixed-potential integral equation using Rao-Wilton-Glisson triangle subdomain basis functions and multi-threaded method of moments.\nFast analysis for frequency sweeps without approximations or interpolation using a wide-band expansion of the  potential Green's functions for a stratified medium with quasi-periodic excitation.\nAutomatic triangulation of sheet geometries to user-specified number of triangles.\nExploits redundancies inherent in structured meshes for greater numerical efficiency.\nEasy extraction of useful engineering performance parameters, including \nReflection and transmission coefficient magnitudes and/or phases or complex coefficients for the field components of \nTE/TM \nVertical/horizontal (Ludwig 3)\nLHCP/RHCP (circular polarization)\nDelta insertion phase delay (ΔIPD)\nDelta insertion loss (ΔIL)\nAxial ratio ","category":"page"},{"location":"#Limitations","page":"Home","title":"Limitations","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Only zero-thickness, planar FSS/PSS sheets are currently supported.\nFrequency sweeps are fast for normal incidence or for the case where unit cell  incremental phase shifts ψ₁ and ψ₂ are  constant with frequency (as in a waveguide). Frequency sweeps where the angle of incidence is held constant with frequency are generally  much slower (except for normal incidence).","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"PSSFSS is not yet registered, so it must be installed by the Julia package manager with an explicit URL:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> ]\n(v1.6) pkg> add add https://github.com/simonp0420/PSSFSS.jl","category":"page"},{"location":"#Documentation","page":"Home","title":"Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The theory documentation is here\nThe user manual is here","category":"page"},{"location":"#Community","page":"Home","title":"Community","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Help from the community is actively sought and greatly appreciated!  There are several open issues which you might want to tackle, and the documentation could always be improved. Pull requests are welcome.  Feel free to open more issues, whether for  basic capability, performance, examples, documentation, etc.","category":"page"}]
}
